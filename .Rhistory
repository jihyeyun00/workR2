max( airquality[ airquality$Month == 6, 'Wind' ] )
setwd("D:WorkR)
df <- read.table(file="airquality.txt".header=T)
df
calss(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
setwd("D:WorkR")
df <- read.table(file="airquality.txt".header=T)
df
calss(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
setwd("D:WorkR")
df <- read.table(file="airquality.txt".header=T)
df
calss(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
setwd("D:WorkR")
df <- read.table(file="airquality.txt".header=T)
df
class(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
install.packages(c("first", "java", "install"))
install.peckages("xlsx")
install.packages("rjava")
install.peckages("xlsx")
install.packages("rjava")
install.peckages("xlsx")
install.packages("rjava")
df.xlsx <- read.xlsx(file="airquallty",sheetIndex=1,Encoding="UTF-8"
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
df.xlsx <- read.xlsx(file="airquallty",sheetIndex=1,Encoding="UTF-8"
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex=1,Encoding="UTF-8")
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1202,
Encoding="UTF-8")
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
install.peckages("xlsx")
install.packages("rjava")
install.peckages("xlsx")
install.packages("rJava")
install.peckages("xlsx")
install.packages("rJava")
install.peckages("xlsx")
install.packages("xlsx")
library(rJava)
library(xlsx)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
Encoding="UTF-8")
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
Encoding="UTF-8")
df.xlsx
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx
#
setwd("D:/WorkR")
df <- read.table(file="airquality.txt".header=T)
#
setwd("D:/workR")
#
setwd("D:/WorkR")
#
setwd("D:/WorkR2")
df <- read.table(file="airquality.txt".header=T)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx <- read.xlsx(file="airquality.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx
min.mpg <- min( mtcars[ mtcars$gear == 4, 'mpg' ] )
rownames( mtcars[ mtcars$mpg == min.mpg, ] )
score <- c(76,84,69,50,95,6,82,71,88,84)
which(score==69)
which(score>=95)
max(score)
which.max(score)
min(score)
which.min(score)
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)
idx
idx <- which(score>=60)
score[idx] <- 61
score
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)
idx
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
class(favorite)
table(favorite)
table(favorite) /length(favorite)
ds <- table(favorite)
ds
barpolt(ds,main='favorite season')
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
class(favorite)
table(favorite)
table(favorite) /length(favorite)
ds <- table(favorite)
ds
barplot(ds,main='favorite season')
ds.new <- ds[c(2,3,1,4)]
ds.new
barplot(ds.new,main = 'favorite season')
ds.new <- ds[c(2,3,1,4)]
ds.new
barplot(ds.new,main = 'favorite season')
score <- c(76,84,69,50,95,6,82,71,88,84)
which(score==69)
which(score>=95)
max(score)
which.max(score)
min(score)
which.min(score)
idx <- which(score>=60)
score[idx] <- 61
score
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)   뭔말?
idx
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)   #뭔말?
idx
iris
pie(ds,main='favorite season')
pie(ds.new,main = 'favorite season')
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color);ds
barplot(ds,main="favorite season")
color <- c('green','red','blue')
name(ds) <- colors;ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols)
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color); ds
barplot(ds,main="favorite season")
color <- c('green','red','blue')
names(ds) <- colors;ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols)
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols)
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
color <- c('green','red','blue')
names(ds) <- colors;     ds
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols) #색상부여하는 인수-col
weight <- c(60,62,64,65,68,69);weight
weight.heavy <- c(weight,120);weight.heavy
#평균
mean(weight);mean(weight.heavy)
#중앙값
median(weight);median(weight.heavy)
#절사평균
mean(weight,trim = 0.2)
mean(weight.heavy,trim = 0.2)
quantile(weight.heavy)
quantile(weight.heavy,(0:10)/10)
summary(weight.heavy)
#분산
var(weight)
#표준편차
sd(weight)
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(weight)
pie(ds,main='favorite season')
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
names(ds) <- colors;     ds
names(ds) <- color;     ds
barplot(ds,main = 'favorite season',col=colors)
barplot(ds,main='favorite season')
colors <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols) #색상부여하는 인수-col
#
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
class(favorite)
table(favorite)     #도수분포표(몇개있는지)
table(favorite) /length(favorite)  #length 비율
ds <- table(favorite)
dsbar
barplot(ds,main='favorite season') #막대그래프
ds.new <- ds[c(2,3,1,4)]
ds.new
barplot(ds.new,main = 'favorite season')  #main 제목
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
colors <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols) #색상부여하는 인수-col
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
colors <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colors) #색상부여하는 인수-col
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(weight)
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(weight)
str(cars)
dist <- cars[,2]
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=2,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=0,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=1,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=2,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=2,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=1,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
boxplot(dist,main='자동차제동거리')
boxplot(dist,main='자동차제동거리')
boxplot.stats(dist)
boxplot.stats(dist)$stats  #정상범위 사분위수
boxplot.stats(dist)$n      #관측치 개수
boxplot.stats(dist)$conf   #중앙값 신뢰구간
boxplot.stats(dist)$cout   #이상치(특이값)목록
boxplot.stats(dist)$out   #이상치(특이값)목록
boxplot(Petal.Length-Species,
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-irisSpecies,
main='품종별 꽃잎의 길이')
boxplot(Petal.Length~Species,
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-irisSpecies,
main='품종별 꽃잎의 길이')
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
boxplot(Petal.Length~Species, #그룹으로 묶일것 물결 다음
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-iris$Species,
main='품종별 꽃잎의 길이')
boxplot(dist,main='자동차제동거리')
boxplot.stats(dist)
boxplot.stats(dist)$stats  #정상범위 사분위수
boxplot.stats(dist)$n      #관측치 개수
boxplot.stats(dist)$conf   #중앙값 신뢰구간
boxplot.stats(dist)$out   #이상치(특이값)목록
#일변량중 그룹으로 구성된 자료의 상자그림
boxplot(Petal.Length~Species, #그룹으로 묶일것 물결 다음
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-iris$Species,
main='품종별 꽃잎의 길이')
boxplot(Petal.Length~Species, #그룹으로 묶일것 물결 다음
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-irisSpecies,
main='품종별 꽃잎의 길이')
gender <- c(f,f,f,m,m,f,f,f,m,m) ; gender
pie(ds,main = 'favorite season',col=colors) #색상부여하는 인수-col
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
#문1
#1-1
gender <- c(f,f,f,m,m,f,f,f,m,m); gender
gender <- c(f,f,f,m,m,f,f,f,m,m); gender
table(gender)
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
dsbar
ds <- table(favorite)
dsbar
barplot(ds,main='favorite season') #막대그래프
pie(ds,main='favorite season')
pie(ds.new,main = 'favorite season')
season <- ('여름','겨울','봄','가을','여름','가을','겨울','여름','여름','가을'); season
season <- c('여름','겨울','봄','가을','여름','가을','겨울','여름','여름','가을'); season
table(season)
table(gender)
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
Ta1 <- table(season)
Ta1bar
Ta1 <- table(season)
Ta1bar
barplot(Ta1,main = seasn)
Ta1 <- table(season)
Ta1bar
barplot(Ta1,main = season)
Ta1 <- table(season)
Ta1bar
barplot(Ta1,main = 'season')
Ta1 <- table(season)
barplot(Ta1,main = 'season')
dsbar
barplot(ds,main='favorite season') #막대그래프
favorite
class(favorite)
table(favorite)     #도수분포표(몇개있는지)
table(favorite) /length(favorite)  #length 비율
ds <- table(favorite)
dsbar
barplot(ds,main='favorite season') #막대그래프
barplot(ds,main='favorite season') #막대그래프
season <- c('여름','겨울','봄','가을','여름','가을','겨울','여름','여름','가을'); season
table(season)
Ta1 <- table(season)
barplot(Ta1,main = 'season')
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
table(gender)
G<- table(gender)
barplot(G,main='gender')
pie(G,main='gender')
m.w <- mtcars$wt
mean(m.w= 0.15)
mtcars
m.w <- mtcars$wt  ; mtcars[,6]
mean(m.w)
median(m.w)
sd(m.w)
mean(m.w= 0.15)
score <- c(90,85,73,80,85,65,78,50,68,96)
names(score) <- c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
# 2. score 벡터의 내용을 출력하시오.
score
# 3. 전체 성적의 평균과 중앙값을 각각 구하시오.
mean(score);mean
median(score)
# 4. 전체 성적의 표준편차를 출력하시오.
sd(score)
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
which.max(score)
source('D:/workR2/yunjihye12.02.R', encoding = 'UTF-8', echo=TRUE)
c.l <- mtcars$cyl; c.l
table(c.l)
boxplot(score,main='학생A') #박스플롯:데이터가 분포가 어떤지있지 알수
boxplot.stats(score)$out
boxplot.stats(dist)
boxplot(dist,main='자동차제동거리')
boxplot.stats(dist)
dist <- cars[,2]
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',
border='blue',col='green',las=3,breaks=5) #breaks 막대수
#상자그림(boxplot, 상자수염그림)
#사분위수를 시각화하여 그래프 형태로 표시
#상자그림은 하나의 그래프로 데이터의 분포 형태를 포함한 다양한 정보를 전달
#자료의 전반적인 분포를 이해하는데 도움
#구체적인 최소 /최대/중앙값을 알기는 어렵다
#(상자 밖의 선은 최대최소값, 동그라미 이상적인 수치 굵은선은 중앙값, 상자가 높아지면 평균에서 흩어져있다)
boxplot(dist,main='자동차제동거리')
boxplot.stats(dist)
boxplot.stats(dist)$stats  #정상범위 사분위수,상태
#dim( mtcars )
mtcars
#dim( mtcars )
# 문4
# R에서 제공하는 mtcars 데이터셋에 대해 다음 문제를 해결하기 위한 R코드를 작성하시오.
#  #선생님은 먼저 확인 :
#
dim( mtcars )
#
str( mtcars )
# 1. 중량(wt)의 평균값, 중앙값, 절사평균값(절사범위: 15%), 표준편차를 각각 구하시오.
mtcars
# 문4
# R에서 제공하는 mtcars 데이터셋에 대해 다음 문제를 해결하기 위한 R코드를 작성하시오.
#  #선생님은 먼저 확인 :
#
dim( mtcars )
# 문4
# R에서 제공하는 mtcars 데이터셋에 대해 다음 문제를 해결하기 위한 R코드를 작성하시오.
#  #선생님은 먼저 확인 :
#dim( mtcars )
#str( mtcars ) :num 은 연속형, 도수분포해보고
#
head( mtcars )
mean(m.w= 0.15)
m.w <- mtcars$wt  ; mtcars[,6]
mean(m.w)
median(m.w)
sd(m.w)
mean(m.w= 0.15)
# 2. 중량(wt)에 대
# 2. 중량(wt)에 대해 summary( ) 함수의 적용 결과를 출력하시오.
summary(m.w)
table(c.l)
boxplot.stats(m.w)$out
boxplot(Petal.Length~Species, #그룹으로 묶일것 물결 다음
data=iris,
main='배가량')
boxplot(iris$Petal.Length~iris$Species,
main='품종별 꽃잎의 길이')
boxplot(mpg~gear, #그룹으로 묶일것 물결 다음
data=mtcars,
main='연비')
boxplot(mtcars$mpg~mtcars$gear,
main='연비')
boxplot(mtcars$mpg~mtcars$gear,
main='연비')
boxplot(mpg~gear, #그룹으로 묶일것 물결 다음
data=mtcars,
main='연비')
boxplot(mtcars$mpg~mtcars$gear,
main='연비')
boxplot(mtcars$mpg~mtcars$gear,
main='연비')
boxplot(mpg~gear, #그룹으로 묶일것 물결 다음
data=mtcars,
main='연비')
boxplot(mtcars$gear~mtcars$mpg,
main='연비')
plot(wt,mpg,main = "중량-연비 그래프",
xlab="중량",ylab="연비",
col="red",pch=19)
wt<-mtcars$wt
mpg<-mtcars$mpg
plot(wt,mpg,main = "중량-연비 그래프",
xlab="중량",ylab="연비",
col="red",pch=19)
wt<-mtcars$wt
mpg<-mtcars$mpg
plot(wt,mpg,main = "중량-연비 그래프",
xlab="중량", ylab="연비",
col="red",pch=19)
wt<-mtcars$wt
mpg<-mtcars$mpg
plot(wt,mpg,main = "중량-연비 그래프",
xlab="중량", ylab="연비",
col="red",pch=25)  #0~25 까지
wt<-mtcars$wt
mpg<-mtcars$mpg
plot(wt,mpg,main = "중량-연비 그래프",
xlab="중량", ylab="연비",
col="red",pch=0)  #0~25 까지
wt<-mtcars$wt
mpg<-mtcars$mpg
plot(wt,mpg,main = "중량-연비 그래프",
xlab="중량", ylab="연비",
col="red",pch=3)  #0~25 까지
var<-c("mpg","disp","drat","wt")
target<-mtcars[,vars]
head(targer)
pairs(targer,main="mult plots")
var<-c("mpg","disp","drat","wt")
target<-mtcars[,vars]
head(target)
pairs(targer,main="mult plots")
var<-c("mpg","disp","drat","wt")
target<-mtcars[,vars]
head(target)
pairs(target,main="mult plots")
var<-c("mpg","disp","drat","wt")
target<-mtcars[,vars]
head(target)
pairs(target,main="multi plots")
var<-c("mpg","disp","drat","wt")
target<-mtcars[,vars]
head(target)
pairs(target,main="multi plots")
var<-c("mpg","disp","drat","wt")
target<-mtcars[,vars]
head(target)
pairs(target,main="multi plots")
var<-c("mpg","disp","drat","wt")
target<-mtcars[,vars]
head(target)
pairs(target,main="multi plots")
