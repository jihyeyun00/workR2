tmp1 <- subset( st, Illiteracy < 2.0 )
tmp1 <- tmp1$Income
tmp2 <- subset( st, Illiteracy >= 2.0 )
tmp2 <- tmp2$Income
abs( mean( tmp1 ) - mean( tmp2 ) )
#[1,] 10 21
#[2,] 40 60
#[3,] 60 70
#[4,] 20 30
#1. 위와 같은 내용의 matrix score를 생성
m <- c(10,40,60,20)
f <- c(21,60,70,30)
score <- data.frame(m,f)
score
colnames( st )
names( st )
st <- data.frame(state.x77)
#2. st의 내용을 출력
st
#3. st의 열 이름 출력
colnames( st )
names( st )
#4. st의 행 이름 출력
rownames( st )
#5. st의 행의 개수와 열의 개수 출력
nrow( st )
ncol( st )
dim( st )
#6. st의 요약 정보 출력
str( st )
#17. 인구(Population)가 2,000 미만이고, 범죄율(Murder)이 12미만인 주의 정보 출력
subset( st, Population < 2000 & Murder < 12 )
tmp <- subset( st, Illiteracy >= 2.0 )
tmp <- tmp$Income
mean( tmp )
pon.mpg <- mtcars[ 'Pontiac Firebird','mpg' ]
rownames( mtcars[ mtcars$mpg > pon.mpg, ] ) # 방법 1
rownames( subset( mtcars, mpg > pon.mpg ) ) # 방법 2
#4. 6월달에 발생한 가장 강한 바람(Wind)의 세기 출력
max( airquality[ airquality$Month == 6, 'Wind' ] )
setwd("D:WorkR)
df <- read.table(file="airquality.txt".header=T)
df
calss(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
setwd("D:WorkR")
df <- read.table(file="airquality.txt".header=T)
df
calss(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
setwd("D:WorkR")
df <- read.table(file="airquality.txt".header=T)
df
calss(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
setwd("D:WorkR")
df <- read.table(file="airquality.txt".header=T)
df
class(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
install.packages(c("first", "java", "install"))
install.peckages("xlsx")
install.packages("rjava")
install.peckages("xlsx")
install.packages("rjava")
install.peckages("xlsx")
install.packages("rjava")
df.xlsx <- read.xlsx(file="airquallty",sheetIndex=1,Encoding="UTF-8"
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
df.xlsx <- read.xlsx(file="airquallty",sheetIndex=1,Encoding="UTF-8"
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex=1,Encoding="UTF-8")
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1202,
Encoding="UTF-8")
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx)
tail(df.xlsx)
install.peckages("xlsx")
install.packages("rjava")
install.peckages("xlsx")
install.packages("rJava")
install.peckages("xlsx")
install.packages("rJava")
install.peckages("xlsx")
install.packages("xlsx")
library(rJava)
library(xlsx)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
Encoding="UTF-8")
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
Encoding="UTF-8")
df.xlsx
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx
#
setwd("D:/WorkR")
df <- read.table(file="airquality.txt".header=T)
#
setwd("D:/workR")
#
setwd("D:/WorkR")
#
setwd("D:/WorkR2")
df <- read.table(file="airquality.txt".header=T)
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx <- read.xlsx(file="airquallty.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx <- read.xlsx(file="airquality.xlsx",sheetIndex = 1,
encoding="UTF-8")
df.xlsx
min.mpg <- min( mtcars[ mtcars$gear == 4, 'mpg' ] )
rownames( mtcars[ mtcars$mpg == min.mpg, ] )
score <- c(76,84,69,50,95,6,82,71,88,84)
which(score==69)
which(score>=95)
max(score)
which.max(score)
min(score)
which.min(score)
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)
idx
idx <- which(score>=60)
score[idx] <- 61
score
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)
idx
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
class(favorite)
table(favorite)
table(favorite) /length(favorite)
ds <- table(favorite)
ds
barpolt(ds,main='favorite season')
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
class(favorite)
table(favorite)
table(favorite) /length(favorite)
ds <- table(favorite)
ds
barplot(ds,main='favorite season')
ds.new <- ds[c(2,3,1,4)]
ds.new
barplot(ds.new,main = 'favorite season')
ds.new <- ds[c(2,3,1,4)]
ds.new
barplot(ds.new,main = 'favorite season')
score <- c(76,84,69,50,95,6,82,71,88,84)
which(score==69)
which(score>=95)
max(score)
which.max(score)
min(score)
which.min(score)
idx <- which(score>=60)
score[idx] <- 61
score
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)   뭔말?
idx
idx <- which(iris[,1:4]>5.0,arr.ind = TRUE)   #뭔말?
idx
iris
pie(ds,main='favorite season')
pie(ds.new,main = 'favorite season')
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color);ds
barplot(ds,main="favorite season")
color <- c('green','red','blue')
name(ds) <- colors;ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols)
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color); ds
barplot(ds,main="favorite season")
color <- c('green','red','blue')
names(ds) <- colors;ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols)
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols)
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
color <- c('green','red','blue')
names(ds) <- colors;     ds
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols) #색상부여하는 인수-col
weight <- c(60,62,64,65,68,69);weight
weight.heavy <- c(weight,120);weight.heavy
#평균
mean(weight);mean(weight.heavy)
#중앙값
median(weight);median(weight.heavy)
#절사평균
mean(weight,trim = 0.2)
mean(weight.heavy,trim = 0.2)
quantile(weight.heavy)
quantile(weight.heavy,(0:10)/10)
summary(weight.heavy)
#분산
var(weight)
#표준편차
sd(weight)
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(weight)
pie(ds,main='favorite season')
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
color <- c('green','red','blue')
names(ds) <- colors;     ds
names(ds) <- color;     ds
barplot(ds,main = 'favorite season',col=colors)
barplot(ds,main='favorite season')
colors <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols) #색상부여하는 인수-col
#
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
class(favorite)
table(favorite)     #도수분포표(몇개있는지)
table(favorite) /length(favorite)  #length 비율
ds <- table(favorite)
dsbar
barplot(ds,main='favorite season') #막대그래프
ds.new <- ds[c(2,3,1,4)]
ds.new
barplot(ds.new,main = 'favorite season')  #main 제목
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
colors <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colols) #색상부여하는 인수-col
ds <- table(favorite.color); ds
barplot(ds,main='favorite season')
colors <- c('green','red','blue')
names(ds) <- colors;     ds
barplot(ds,main = 'favorite season',col=colors)
pie(ds,main = 'favorite season',col=colors) #색상부여하는 인수-col
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(weight)
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(weight)
str(cars)
dist <- cars[,2]
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=2,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=0,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=1,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=2,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=2,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=1,breaks=5)
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
boxplot(dist,main='자동차제동거리')
boxplot(dist,main='자동차제동거리')
boxplot.stats(dist)
boxplot.stats(dist)$stats  #정상범위 사분위수
boxplot.stats(dist)$n      #관측치 개수
boxplot.stats(dist)$conf   #중앙값 신뢰구간
boxplot.stats(dist)$cout   #이상치(특이값)목록
boxplot.stats(dist)$out   #이상치(특이값)목록
boxplot(Petal.Length-Species,
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-irisSpecies,
main='품종별 꽃잎의 길이')
boxplot(Petal.Length~Species,
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-irisSpecies,
main='품종별 꽃잎의 길이')
hist(dist, main='Histogram for 제동거리',xlab = '제동거리',ylab='빈도수',border='blue',col='green',las=3,breaks=5)
boxplot(Petal.Length~Species, #그룹으로 묶일것 물결 다음
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-iris$Species,
main='품종별 꽃잎의 길이')
boxplot(dist,main='자동차제동거리')
boxplot.stats(dist)
boxplot.stats(dist)$stats  #정상범위 사분위수
boxplot.stats(dist)$n      #관측치 개수
boxplot.stats(dist)$conf   #중앙값 신뢰구간
boxplot.stats(dist)$out   #이상치(특이값)목록
#일변량중 그룹으로 구성된 자료의 상자그림
boxplot(Petal.Length~Species, #그룹으로 묶일것 물결 다음
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-iris$Species,
main='품종별 꽃잎의 길이')
boxplot(Petal.Length~Species, #그룹으로 묶일것 물결 다음
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length-irisSpecies,
main='품종별 꽃잎의 길이')
gender <- c(f,f,f,m,m,f,f,f,m,m) ; gender
pie(ds,main = 'favorite season',col=colors) #색상부여하는 인수-col
favorite <- c('WINTER','SUMMER','SPRING', 'SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING','SPRING')
favorite
#문1
#1-1
gender <- c(f,f,f,m,m,f,f,f,m,m); gender
gender <- c(f,f,f,m,m,f,f,f,m,m); gender
table(gender)
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
dsbar
ds <- table(favorite)
dsbar
barplot(ds,main='favorite season') #막대그래프
pie(ds,main='favorite season')
pie(ds.new,main = 'favorite season')
season <- ('여름','겨울','봄','가을','여름','가을','겨울','여름','여름','가을'); season
season <- c('여름','겨울','봄','가을','여름','가을','겨울','여름','여름','가을'); season
table(season)
table(gender)
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
Ta1 <- table(season)
Ta1bar
Ta1 <- table(season)
Ta1bar
barplot(Ta1,main = seasn)
Ta1 <- table(season)
Ta1bar
barplot(Ta1,main = season)
Ta1 <- table(season)
Ta1bar
barplot(Ta1,main = 'season')
Ta1 <- table(season)
barplot(Ta1,main = 'season')
dsbar
barplot(ds,main='favorite season') #막대그래프
favorite
class(favorite)
table(favorite)     #도수분포표(몇개있는지)
table(favorite) /length(favorite)  #length 비율
ds <- table(favorite)
dsbar
barplot(ds,main='favorite season') #막대그래프
barplot(ds,main='favorite season') #막대그래프
season <- c('여름','겨울','봄','가을','여름','가을','겨울','여름','여름','가을'); season
table(season)
Ta1 <- table(season)
barplot(Ta1,main = 'season')
gender <- c('f','f'.'f','m','m','f','f','f','m','m'); gender
table(gender)
G<- table(gender)
barplot(G,main='gender')
pie(G,main='gender')
