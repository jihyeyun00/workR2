geom_text(data=df,            #데이터 셋
aes(x=lon,y=lat),   #텍스트 위치
size=5,             #텍스트 크기
label=df$name)
gc1<-geocode((enc2utf8("긍정동커피")))
cen1<-as.numeric(gc1)
map1<-get_googlemap(center=cen1,
maptype = "roadmap",
marker=gc1)
ggmap(map)
str(wind)
dim(wind)
str(wind)
sp<-sample(1:nrow(wind), 50)
df<-wind[sp,]
head(df)
cen<-c(mean(df$lon),mean(df$lat))
gc<-data.frame(lon=df$lon, lat=df$lat)
head(gc)
map<-get_googlemap(center=cen,
maptype = "roadmap",
zoom=6,
marker=gc)
ggmap(map)
gmap<-ggmap(map)
gmap+
geom_point(data=df,
aes(x=lon,y=lat,size=spd),
alpha=0.5, col="blue")+
scale_size_continuous(range = c(1,14))
cen<-c(33.247416, 126.560164)   #경도, 위도/구글맵에서는 위도/경도
map<-get_googlemap(center = cen,
zoom = 15,
maptype = "roadmap")
ggmap(map)
cen<-c(33.247416, 126.560164)   #경도, 위도/구글맵에서는 위도/경도
map<-get_googlemap(center = cen,
zoom = 15,
maptype = "roadmap")
ggmap(map)
cen<-c(126.560164,33.247416)   #경도, 위도/구글맵에서는 위도/경도
map<-get_googlemap(center = cen,
zoom = 15,
maptype = "roadmap")
ggmap(map)
gc1<-geocode((enc2utf8("긍정동커피")))
cen<-c(126.560164,33.247416)   #경도, 위도/구글맵에서는 위도/경도
map<-get_googlemap(center = cen,
zoom = 15,
maptype = "roadmap",
marker=gc1)
ggmap(map)
cen<-c(126.560164,33.247416)   #경도, 위도/구글맵에서는 위도/경도
map<-get_googlemap(center = cen,
zoom = 15,
maptype = "roadmap",
marker=gc1)
gc1<-data.frame(lon=126.560164, lat=33.247416)
ggmap(map)
gc1<-data.frame(lon=126.560164, lat=33.247416)
cen<-c(126.560164,33.247416)   #경도, 위도/구글맵에서는 위도/경도
map<-get_googlemap(center = cen,
zoom = 15,
maptype = "roadmap",
marker=gc1)
ggmap(map)
ggmap(map)
gmap<-ggmap(map)
gmap+
geom_text(data=gc1,            #데이터 셋
aes(x=lon,y=lat),   #텍스트 위치 (경도, 위도값)
size=5,             #텍스트 크기
label="긍정동커피")      #텍스트 이름
#단계 구분도
install.packages("ggiraphExtra")
library(ggiraphExtra)
dim(USArrests)
str(USArrests)
head(USArrests)
library(tibble)
crime<-rownames_to_column(USArrests,var="state")
crime$state<-tolower(crime$state)
str(crime)
library(tibble)
crime<-rownames_to_column(USArrests,var="state")
crime$state<-tolower(crime$state)
str(crime)
library(ggplot2)
install.packages("mapproj")
library(mapproj)
state_map<-map_data("state")
str(state_map)
ggChoropleth(data=crime,
aes(fill=Murder,
map_id=state),
map=state_map)
install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")
devtools::install_github("cardiomoon/moonBook2")
library(kormaps2014)
library(moonBook2)
install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")
devtools::install_github("cardiomoon/moonBook2")
library(kormaps2014)
library(moonBook2)
install.packages("devtools")
library(kormaps2014)
library(moonBook2)
areacode
str(kormap1)
devtools::install_github("cardiomoon/kormaps2014")
devtools::install_github("cardiomoon/moonBook2")
install.packages("devtools")
install.packages("devtools")
library(kormaps2014)
library(moonBook2)
remove.packages("devtools", lib="~/R/win-library/3.6")
install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")  #이게 있어야 지도를 그릴수 있음,R패키지에서 제공하는게 아님.
devtools::install_github("cardiomoon/moonBook2")    #깃허브에 접근하기 위해서 devtools 를 쓰는 것임
library(kormaps2014)
library(moonBook2)
library(ggplot2)
theme_set(theme_gray(base_family="NanumGothic"))
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
areacode
str(kormap1)
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
library(devtools)
st<-data.frame(state.x77)
st
std=which(duplicated(st))
std
str(st)
head(st)
dim(st)
dim(ds)
tsne<-Rtsne(ds, dim=2,  perplexity=10)
tsne
tsne<-Rtsne(ds, dim=2,  perplexity=5)
tsne
sta<-st[-std,]
sta
tsne<-Rtsne(st, dim=2,  perplexity=5)
tsne
st<-st[-std,]
st
tsne<-Rtsne(st, dim=2,  perplexity=5)
tsne
head(stf.tsne)
stf.tsne<-data.frame(tsne$Y)
head(stf.tsne)
ggplot(stf.tsne,aes(x=X1,y=X2,color=stf.tsne))+
geom_point(size=2)
ggplot(stf.tsne,aes(x=X1,y=X2,color=st))+
geom_point(size=2)
# 문2)
ggplot(stf.tsne,aes(x=X1,y=X2,color=st))+
geom_point(size=2)
stf.tsne<-data.frame(tsne$Y)
head(stf.tsne)
scatter3d(x=stf.tsne$X1,y=stf.tsne$X2,
z=stf.tsne$X3)
st<-st[-std,]
st
str(st)
dim(st)
head(st)
tsne<-Rtsne(st, dim=2,  perplexity=5)
tsne
stf.tsne<-data.frame(tsne$Y)
head(stf.tsne)
ggplot(stf.tsne,aes(x=X1,y=X2))+
geom_point(size=2)
tsne<-Rtsne(ds,dim=3,perplexity=5)
stf.tsne<-data.frame(tsne$Y)
head(stf.tsne)
scatter3d(x=stf.tsne$X1,y=stf.tsne$X2,
z=stf.tsne$X3)
color<-c('red','green','blue')
scatter3d(x=stf.tsne$X1,y=stf.tsne$X2,
z=stf.tsne$X3,
surface=FALSE)
tsne<-Rtsne(ds,dim=3,perplexity=5)
scatter3d(x=stf.tsne$X1,y=stf.tsne$X2,
z=stf.tsne$X3)
tsne<-Rtsne(st, dim=2,  perplexity=5)
tsne
stf.tsne<-data.frame(tsne$Y)
head(stf.tsne)
ggplot(stf.tsne,aes(x=X1,y=X2))+  #왜 컬러가 없어야하지?
geom_point(size=2)
tsne<-Rtsne(st, dim=2,  perplexity=5)
tsne
stf.tsne<-data.frame(tsne$Y)
head(stf.tsne)
ggplot(stf.tsne,aes(x=X1,y=X2))+
geom_point(size=2)
library(car)
library(rgl)
library(mgcv)
tsne<-Rtsne(ds,dim=3,perplexity=5)
tsne<-Rtsne(st,dim=3,perplexity=5)
tsne<-Rtsne(st,dim=3,perplexity=5)
st<-data.frame(state.x77)
st
tsne<-Rtsne(st,dim=3,perplexity=5)
# 문1)
# R에서 제공하는 state.x77 데이터셋을 차원 축소하여 2차원 산점도와 3
# 차원 산점도를 작성하시오. (state.x77은 매트릭스 타입이기 때문에 데이터프레임
#                 으로 변환하여 실습한다.)
library(Rtsne)
library(ggplot2)
tsne<-Rtsne(st,dim=3,perplexity=5)
tsne<-Rtsne(st,dim=3,perplexity=5)
stf.tsne<-data.frame(tsne$Y)
head(stf.tsne)
scatter3d(x=stf.tsne$X1,y=stf.tsne$X2,
z=stf.tsne$X3)
str(swiss)
head(swiss)
sw<-data.frame(swiss)
swp=which(duplicated(sw))
swp
dim(sw)
tsne<-Rtsne(sw, dim=2,  perplexity=12)
tsne
head(swf.tsne)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
swf.tsne<-data.frame(tsne$Y)
head(swf.tsne)
tsne<-Rtsne(swf.tsne, dim=2,  perplexity=6)
tsne
tsne<-Rtsne(swf.tsne, dim=2,  perplexity=6)
tsne
tsne<-Rtsne(swf.tsne, dim=2,  perplexity=6)
tsne
tsne<-Rtsne(sw, dim=2,  perplexity=6)
tsne
swf.tsne<-data.frame(tsne$Y)
head(swf.tsne)
ggplot(swf.tsne,aes(x=X1, y=X2))+
geom_point(size=2)
tsne<-Rtsne(sw,dim=3,perplexity=10)
swf.tsne<-data.frame(tsne$Y)
head(swf.tsne)
scatter3d(x=swf.tsne$X1,y=swf.tsne$X2,
z=swf.tsne$X3)
library(ggmap)
register_google(key = 'AIzaSyBdvaqxtk8AUDQE8fSZly76zSmzu6vYEP4')
gc<-geocode(enc2utf8("서울시청"))
gc
cen<-as.numeric(gc) #경도/ 위도를 "숫자"로 변환
cen
map<-get_googlemap(center=cen,
zoom=10,
size=c(600,600),
maptype = "roadmap")
ggmap(map)
gg<-geocode(enc2utf8("금강산"))
gg
cen<-as.numeric(gg)
cen
map<-get_googlemap(center=cen,
zoom=8,
size=c(500,500),
maptype = "hybrid")
ggmap(map)
kk<-geocode(enc2utf8("강남역"))
kk
cen<-as.numeric(kk)
cen
map<-get_googlemap(center=cen,
zoom=16,
size=c(640,640),
maptype = "roadmap")
ggmap(map)
od<-data.frame(lon=127.397692, lat=36.337058) #경도, 위도 데이터셋 만들기
cen<-c(127.397692,36.337058)   #경도, 위도/구글맵에서는 위도/경도
map<-get_googlemap(center = cen,
zoom = 9,
maptype = "roadmap")
ggmap(map)
cen<-c(127.397692,36.337058)
map<-get_googlemap(center = cen,
zoom = 9,
maptype = "roadmap")
ggmap(map)
cen<-c(135.502330,34.693594)
map<-get_googlemap(center = cen,
zoom = 9,
maptype = "roadmap")
ggmap(map)
names<-c("강서구청","서초구청","강동구청")
addr<-c("서울특별시 강서구 화곡6동 화곡로 302",
"서울특별시 서초구 서초2동 남부순환로 2584",
"서울특별시 성내동"
gc<-geocode(enc2utf8(addr))
gc
df<-data.frame(name=names, lon=gc$lon,
lat=gc$lat)
df
df<-data.frame(name=names, lon=gc$lon,
lat=gc$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
maptype = "roadmap",
zoom=10,
size = c(640,640),
marker=gc)
ggmap(map)
names<-c("강서구청","서초구청","강동구청")
addr<-c("서울특별시 강서구 화곡6동 화곡로 302",
"서울특별시 서초구 서초2동 남부순환로 2584",
"서울특별시 성내동"
gc<-geocode(enc2utf8(addr))
gc
df<-data.frame(name=names, lon=gc$lon,
lat=gc$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
maptype = "roadmap",
zoom=10,
size = c(640,640),
marker=gc)
ggmap(map)
names<-c("강서구청","서초구청","강동구청")
addr<-c("서울특별시 강서구 화곡6동 화곡로 302",
"서울특별시 서초구 서초2동 남부순환로 2584",
"서울특별시 성내동")
gc<-geocode(enc2utf8(addr))
gc
df<-data.frame(name=names, lon=gc$lon,
lat=gc$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
maptype = "roadmap",
zoom=10,
size = c(640,640),
marker=gc)
ggmap(map)
gmap<-ggmap(map)
gmap+
geom_text(data=df,            #데이터 셋
aes(x=lon,y=lat),   #텍스트 위치 (경도, 위도값)
size=5,             #텍스트 크기
label=df$name)      #텍스트 이름
names<-c("부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시")
GG<-geocode(enc2utf8(names))
GG
cen<-as.numeric(GG)
cen
names<-c("부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시")
addr<-c("부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시")
GG<-geocode(enc2utf8(addr))
GG
cen<-as.numeric(GG)
cen
names<-c("부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시")
addr<-c("부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시")
GG<-geocode(enc2utf8(addr))
GG
df<-data.frame(name=names, lon=gc$lon,
lat=gc$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
df<-data.frame(name=names, lon=GG$lon,
lat=GG$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
zoom=10,
size=c(500,500),
marker=gc)
ggmap(map)
gmap<-ggmap(map)
gmap+
geom_text(data=df,
aes(x=lon,y=lat),
size=5,
label=df$name)
df<-data.frame(name=names, lon=GG$lon,
lat=GG$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
zoom=10,
size=c(500,500),
marker=GG)
ggmap(map)
gmap<-ggmap(map)
gmap+
geom_text(data=df,
aes(x=lon,y=lat),
size=5,
label=df$name)
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
zoom=10,
size=c(500,500),
marker=GG)
ggmap(map)
names<-c("부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시")
addr<-c("부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시")
gc<-geocode(enc2utf8(addr))
gc
df<-data.frame(name=names, lon=gc$lon,
lat=gc$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
zoom=10,
size=c(640,640),
marker=gc)
ggmap(map)
gmap<-ggmap(map)
gmap+
geom_text(data=df,
aes(x=lon,y=lat),
size=5,
label=df$name)
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
zoom=10,
size=c(100,100),
marker=gc)
ggmap(map)
names<-c("북한산","설악산","오대산",
"치악산","태백산")
addr<-c("경기 고양시 덕양구 대서문길 375",
"강원 인제군 북면 한계리",
"강원 홍천군 내면 오대산로 2",
"강원 원주시 소초면 무쇠점2길 26",
"강원 태백시 혈동")
gc<-geocode(enc2utf8(addr))
gc
df<-data.frame(name=names, lon=gc$lon,
lat=gc$lat)
df
cen<-c(mean(df$lon),mean(df$lat))
map<-get_googlemap(center=cen,
maptype = "roadmap",
zoom=10,
size = c(640,640),
marker=gc)
ggmap(map)
gmap<-ggmap(map)
gmap+
geom_text(data=df,            #데이터 셋
aes(x=lon,y=lat),   #텍스트 위치 (경도, 위도값)
size=5,             #텍스트 크기
label=df$name)      #텍스트 이름
setwd(D:\workR2)
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
View(tr)
setwd(D:/workR2)
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
View(tr)
setwd("D:/workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
View(tr)
setwd("D:\workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
View(tr)
setwd("D:\workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
tr
setwd("D:/workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
tr
View(tr)
View(tr)
setwd("D:/workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
tr
setwd("D:\workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
tr
setwd("D:/workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
tr
View(tr)
df.sl<-data.frame(tr)
df.sl
setwd("D:\workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
tr
setwd("D:/workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T))
tr
View(tr)
setwd("D:/workR2")
tr<-read.csv("2018년도 시군구별 교통사고.csv",header=T)
tr
View(tr)
df.sl<-data.frame(tr)
df.sl
source('D:/workR2/yunjihye_12.11.R', encoding = 'UTF-8')
