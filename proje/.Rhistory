install.packages("desdr")
require(desdr)
install.packages("descr")
require(descr)
df<-data.frame(id=c(1,2,4),
gender=c("남","여","남"))
table(df$gender)
freq(df$gender)
freq(df$gender,plot=F)
table(df$gender)
freq(df$gender)   #table
df1<-data.frame(id=c(1,2,3,4,5),         #??
midterm=c(60,80,70,90,85))
df2<-data.frame(id=c(1,2,3,4,5),
final=c(60,80,70,90,85))
total<-left_join(df1,df2,by="id")
df1<-data.frame(id=c(1,2,3),
address=c("서울","부산","제주"),
stirngsFactors=F)   #팩터로 하지마
df2<-data.frame(id=c(1,2,4),
gender=c("남","여","남"))
total
df_left<-left_join(df1,df2,by='id')
df_left
df_inner<-inner_join(df1,df2,by='id')
df_inner
df_full<-full_join(df1,df2,by='id')
df_full
ds<-data.frame(state.x77)
ds[2,3]<-NA
ds[3,1]<-NA
ds[2,4]<-NA
ds[4,3]<-NA
head(ds)
# (1) 각 열별로 결측값이 몇 개인지 출력하시오.
na_count<-apply(ds,2,function(y) sum(is.na(y)))
# (1) 각 열별로 결측값이 몇 개인지 출력하시오.
na_count<-apply(ds,2,function(y) sum(is.na(y))); na_count
# (2) 결측값이 포함된 행들의 데이터를 출력하시오.
rowSums(is.na(ds))
sum(rowSums(is.na(ds))>0)
rownames(is.na(ds))
rowSums(is.na(ds))
sum(rowSums(is.na(ds))>0)
summary(ds)
head(ds)
ds[!complete.cases(ds),]
# (4) 결측값이 포함된 행들을 제외하고 새로운 데이터셋 ds.new를 만들어보시오.
ds.new<-ds[complete.cases(ds),]
head(ds.new)
#
# (1) st의 각 변수(열)들에 대해 특이값이 존재하는지 상자그림을 그려 확인하시오.
head(st)
boxplot.stats(st)
boxplot.stats(st)$out
boxplot(st,main=state)
st<-data.frame(state.x77)
#
# (1) st의 각 변수(열)들에 대해 특이값이 존재하는지 상자그림을 그려 확인하시오.
head(st)
boxplot.stats(st)
boxplot.stats(st)$out
boxplot(st,main=state)
boxplot(st,main='state')
# (2) 특이값이 존재하는 경우 이상치를 NA로 대체하여 저장하시오.
boxplot.stats(st$Area)$out
out.st<-boxplot.stats(st$Area)$out
st$Area[st$Area%in%out.st]<-NA
out.st<-boxplot.stats(st$Area)$out
st$Area[st$Area%in%out.st]<-NA
head(st)
new.st<-out.st[complete.cases(st),]
head(new.st)
out.st<-boxplot.stats(st$Area)$out
st$Area[st$Area%in%out.st]<-NA
head(st)
new.st<-st[complete.cases(out.st),]
head(new.st)
new.st<-st[complete.cases(out.st),]
head(new.st)
# 문3)
# R에서 제공하는 airquality 데이터셋에 대해 다음의 문제를 해결하기 위한
# R 코드를 작성하시오.
#
# (1) airquality를 AQ에 저장하시오.
str(airquality)
AQ<-data.frame(airquality)
AQ<-data.frame(airquality) ;AQ
# (2) AQ에서 열별로 NA의 개수를 출력하시오.
AQ.na<-apply(AQ,2,function(y) sum(is.na(y)))
AQ.na<-apply(AQ,2,function(y) sum(is.na(y)))
AQ.na
rowSums(is.na(AQ.na))
sum(rowSums(is.na(AQ.na))>0)
sum(is.na(AQ.na))
AQ.na<-apply(AQ,2,function(y) sum(is.na(y)))
AQ.na
rowSums(is.na(AQ.na))
sum(rowSums(is.na(AQ.na))>0)
# (4) AQ에서 NA를 포함하지 않은 행들만 출력하시오.
head(AQ.na)
y<-x[complete.cases(AQ.na),]
y<-x[complete.cases(AQ.na),]
head(AQ.na)
y<-x[complete.cases(AQ.na),]
head(y)
y<-x[complete.cases(AQ.na),]
head(y)
head(AQ.na)
y<-x[complete.cases(AQ.na),]
head(y)
y<-AQ.na[complete.cases(AQ.na),]
head(y)
AQ.na<-apply(AQ,2,function(y) sum(is.na(y)))
AQ.na
st2<-st[complete.cases(out.st),]
head(st2)
y<-AQ.na[complete.cases(AQ.na),]
head(y)
head(AQ.na)
AQ
AQ.na<-apply(AQ,2,function(y) sum(is.na(y)))
AQ.na
y<-AQ.na[!complete.cases(AQ.na),]
head(y)
df[2,1]<-5
df<-data.frame(var1=c(1,2,1),
var2=c(2,3,2))
df
#rename () :이름변경
df<-rename(df,v1=var1,v2=var2)
df
#파생변수 추가
df$sum<-df$v1+df$v2
df
df[2,1]<-5
df
head(st[order(st$Illiteracy,decreasing = T),],10)
ill<-st[order(st$Illiteracy,decreasing = T),]
st<-data.frame(state.x77)
st[order(st$Population),]
# (2) state.x77 데이터셋을 Income(소득)을 기준으로 내림차순 정렬하시오.
st[order(st$Income,decreasing = T),]
# (3) Illiteracy(문맹률)가 낮은 상위 10개 주의 이름과 문맹률을 출력하시오.	??
ill<-st[order(st$Illiteracy,decreasing = T),]
head(ill,10)
sp<-split(mtcars,mtcars$gear)
sp
mt.gear<-sp
# (2) mt.gear에서 gear(기어)의 개수가 4인 그룹의 데이터를 출력하시오.
subset(sp,mt.gear$gear==4)
# (2) mt.gear에서 gear(기어)의 개수가 4인 그룹의 데이터를 출력하시오.
subset(mt.gear,gear==4)
# (2) mt.gear에서 gear(기어)의 개수가 4인 그룹의 데이터를 출력하시오.
subset(mt.gear,mt.gear$gear==4)
sp<-split(mtcars,mtcars$gear)
sp
mt.gear<-sp
df <- data.frame(id = c(1, 2, 3, 4, 5, 6), class = c(1, 1, 1, 1, 2, 2),
math = c(50, 60, 45, 30, 25, 50),
english = c(98, 98, 86, 98, 80, 89),
science = c(50, 60, 78, 58, 65, 98))
df
#filter():행추출     df를 class==1 조건에 만족하는 것으로
df%>%filter(class==1)
library(dplyr)
#filter():행추출     df를 class==1 조건에 만족하는 것으로
df%>%filter(class==1)
df%>%filter(class==2)
subset(mt.gear,mt.gear$gear=='4')
summary(mt.gear$`4`)
mt.gear$`4`
g3<-subset(mtcars,gear==3);g3
g5<-subset(mtcars,gear==5);g5
mt.gear.35<-merge(g3,g5)
mt.gear.35<-merge(g3,g5) ;mt.gear.35
mt.gear.35<-merge(g3,g5,all = T) ;mt.gear.35
subset(mtcars,mtcars$wt< 1.5 & mtcars$wt<3.0)
subset(mtcars,wt< 1.5 & wt<3.0)
authors <- data.frame( surname = c( "Twein", "Venables", "Tierney", "Ripley", "McNeil" ),
nationality = c( "US", "Australia", "US", "UK", "Australia" ),
retired = c( "yes", rep( "no", 4 ) ) )
books <- data.frame( name = c( "Johns", "Venables", "Tierney", "Ripley", "Ripley", "McNeil" ),
title = c( "Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis" ),
other.author = c( NA, "Ripley", NA, NA, NA, NA ) )
# (1) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하시오(두
#   ??                                                     데이터프레임에서 공통 열의 값이 일치하는 것들만 병합).
A<-authors; A
B<-books;B
merge(A,B,by.x=c('surname'),by.y=c('name'))
#선생님답
merge( authors, books, by.x = c( 'surname' ), by.y = c( 'name' ), all.x = T )
authors <- data.frame( surname = c( "Twein", "Venables", "Tierney", "Ripley", "McNeil" ),
nationality = c( "US", "Australia", "US", "UK", "Australia" ),
retired = c( "yes", rep( "no", 4 ) ) )
books <- data.frame( name = c( "Johns", "Venables", "Tierney", "Ripley", "Ripley", "McNeil" ),
title = c( "Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis" ),
other.author = c( NA, "Ripley", NA, NA, NA, NA ) )
A<-authors; A
B<-books;B
merge(A,B,by.x=c('surname'),by.y=c('name'))
merge(A,oter.author,by.x = c( 'surname' ), by.y = c( 'other.author' ))
merge(A,other.author,by.x = c( 'surname' ), by.y = c( 'other.author' ))
merge(A,other.author,by.x = c( 'surname' ), by.y = c( 'other.author' ))
A<-authors; A
B<-books;B
merge(A,B,by.x=c('surname'),by.y=c('name'))
# (2) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하되
# authors의 행들이 모두 표시되도록 하시오.??
#선생님답
merge( authors, books, by.x = c( 'surname' ), by.y = c( 'name' ), all.x = T )
# (3) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하되 books
# 의 행들은 모두 표시되도록 하시오.??
#선생님답
merge( authors, books, by.x = c( 'surname' ), by.y = c( 'name' ), all.y = T )
# (4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하
# 시오.
merge(A,other.author,by.x = c( 'surname' ), by.y = c( 'other.author' ))??
merge(A,other.author,by.x = c( 'surname' ), by.y = c( 'other.author' ))
source('D:/workR2/yunjihye12.04.R', encoding = 'UTF-8', echo=TRUE)
merge( authors, books, by.x = c( 'surname' ), by.y = c( 'other.author' ) )
ds<-data.frame(state.x77)
ds[2,3]<-NA
ds[3,1]<-NA
ds[2,4]<-NA
ds[4,3]<-NA
head(ds)
# (1) 각 열별로 결측값이 몇 개인지 출력하시오.
na_count<-apply(ds,2,function(y) sum(is.na(y))); na_count
head(ds)
ds[!complete.cases(ds),]
x[!complete.cases(x),]   #complete.cases 함수이용
na_count<-apply(ds,2,function(y) sum(is.na(y))); na_count
# (2) 결측값이 포함된 행들의 데이터를 출력하시오.
head(ds)
ds[!complete.cases(ds),]
x[!complete.cases(x),]   #complete.cases 함수이용
head(ds)
ds[!complete.cases(ds),]
rowSums(is.na(ds))
sum(rowSums(is.na(ds))>0)
ds.new<-ds[complete.cases(ds),]
head(ds.new)
# (4) 결측값이 포함된 행들을 제외하고 새로운 데이터셋 ds.new를 만들어보시오.
ds.new<-ds[complete.cases(ds),]
# (4) 결측값이 포함된 행들을 제외하고 새로운 데이터셋 ds.new를 만들어보시오.
ds.new<-ds[complete.cases(ds),];ds.new
boxplot( st[, 1 ] )     # 특이값 있음
boxplot( st[, 2 ] )     # 특이값 있음
boxplot( st[, 3 ] )     # 특이값 없음
boxplot( st[, 4 ] )     # 특이값 없음
boxplot( st[, 5 ] )     # 특이값 없음
boxplot( st[, 6 ] )     # 특이값 없음
boxplot( st[, 7 ] )     # 특이값 없음
boxplot( st[, 8 ] )     # 특이값 있음
#선생님답
colmean <- colMeans( AQ, na.rm = T )
subset(mtcars,wt< 1.5 & wt<3.0)
subset(mtcars,wt>= 1.5 & wt<3.0)
out.st<-boxplot.stats(st$Area)$out
st$Area[st$Area%in%out.st]<-NA
head(st)
out.st<-boxplot.stats(st$Area)$out
st$Area[st$Area%in%out.st]<-NA
out.st<-boxplot.stats(st$Area)$out
st$Area[st$Area%in%out.st]<-NA ;st$Area
df1<-data.frame(id=c(1,2,3),
address=c("서울","부산","제주"),
stirngsFactors=F)   #팩터로 하지마
df2<-data.frame(id=c(1,2,4),
gender=c("남","여","남"))
df_left<-left_join(df1,df2,by='id')
df_left
df_inner<-inner_join(df1,df2,by='id')
df_inner
df_full<-full_join(df1,df2,by='id')
df_full<-full_join(df1,df2,by='id')
df_full
df1<-data.frame(id=c(1,2,3,4,5),         #??
midterm=c(60,80,70,90,85))
df2<-data.frame(id=c(1,2,3,4,5),
final=c(60,80,70,90,85))
df1<-data.frame(id=c(1,2,3,4,5),         #??
midterm=c(60,80,70,90,85))
df1
df2<-data.frame(id=c(1,2,3,4,5),
final=c(60,80,70,90,85))
df2
df_left<-left_join(df1,df2,by='id')
df_left
df_inner<-inner_join(df1,df2,by='id')
df_inner
df_full<-full_join(df1,df2,by='id')
df_full
df_bind<-bind_join(df1,df2,by='id')
df_bind
df_bind<-bind_rows(df1,df2,by='id')
df_bind
df_bind<-bind_rows(df1,df2)
df_bind
df1<-data.frame(id=c(1,2,3,4,5),
test=c(60,80,70,90,85))
df2<-data.frame(id=c(1,2,3,4,5),
test=c(60,80,70,90,85))
df_all<-bind_rows(df1,df2)
df_all
df%>%filter(class==1)
df%>%filter(class==2)
df%>%filter(class!=1)
df%>%filter(class!=2)
#select():변수추출
df %>% select(math)
df %>% select(science)
df %>% select(class,math,science)
df %>% select(-math)
df%>%
mutate(total=math+english+science)%>%head
agg<-aggregate(iris[,-5],              #aggregate 합계 , 총액
by=list(iris$Species),
FUN = mean)
agg
setwd("D:/WorkR2")
read.csv(file = "대중교통현황1",sheetIndex=1,Encoding("UTR-8")
setwd("D:/WorkR2")
ds.csv<-read.csv(file = "대중교통현황1",sheetIndex=1,Encoding("UTR-8")
setwd("D:/WorkR2")
ds.csv<-read.csv(file = "대중교통현황1",sheetIndex=1,Encoding("UTR-8")
ds.csv
setwd("D:/WorkR2")
ds.csv<-read.csv(file = "대중교통현황1",sheetIndex=1,Encoding("UTR-8")
ds
setwd("D:/WorkR2")
ds.csv<-read.csv( "대중교통현황1",header=T)
setwd("D:/WorkR2")
tr.csv<-read.csv( "대중교통현황1.csv",header=T)
setwd("D:/WorkR2")
tr<-read.csv( "대중교통현황1.csv",header=T)
tr
setwd("D:/WorkR2")
tr<-read.csv( "대중교통현황1.csv",header=T)
setwd("D:/WorkR2")
tr<-read.csv( "대중교통현황1.csv",header=T)
tr
setwd("D:/WorkR2")
tr<-read.csv( "대중교통현황1.csv",header=T)
tr
setwd("D:/WorkR2")
tr<-read.csv( "jeju tr",header=T)
tr
setwd("D:/WorkR2")
tr<-read.csv( "jeju tr.csv",header=T)
tr
View(tr)
tr2<-read.xlxs("seoul tr.xlxs")
tr2
View(tr2)
tr2<-read.xlsx("seoul tr.xlsx")
tr2
View(tr2)
library(rJava)
library(xlsx)
tr2<-read.xlsx("seoul tr.xlsx")
tr2
View(tr2)
tr2<-read.xlsx("seoul tr.xlsx")
tr2
tr2 <- read.xlsx(file="seoul tr.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr2)
tr3 <- read.pdf(file="jeju tr2.pdf",
encoding="UTF-8")
tr3
View(tr3)
tr2 <- read.xlsx(file="seoul tr.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr2)
tr4<-read.xlsx("11.교통 관광 정보 통신_최종.xlsx",encoding="UTF-8")
tr4
View(tr4)
tr4<-read.xlsx("11.교통 관광 정보 통신_최종.xlsx",encoding="UTF-8")
tr4
View(tr4)
tr4<-read.xlsx("11.교통 관광 정보 통신_최종.xlsx",sheetIndex=1,encoding="UTF-8")
tr4
View(tr4)
tr4 <- read.xlsx(file="seoul final.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr4)
tr4 <- read.xlsx(file="seoul final.xlsx",sheetIndex = 1,
encoding="UTF-8")
tr4
View(tr4)
tr4 <- read.xlsx(file="seoul final.xlsx","1.자동차등록",
encoding="UTF-8")
tr4
View(tr4)
tr4 <- read.xlsx(file="seoul final.xlsx",
encoding="UTF-8")
tr4
View(tr4)
tr2 <- read.xlsx(file="seoul tr.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr2)
setwd("D:/WorkR2")
tr<-read.csv( "jeju tr.csv",header=T)
tr
View(tr)
setwd("D:/WorkR2")
tr<-read.csv( "한국교통안전공단_대중교통 이용인원 현황",header=T)
tr
View(tr)
setwd("D:/WorkR2")
A<-read.csv( "한국교통안전공단_대중교통 이용인원 현황",header=T)
A
View(A)
setwd("D:/WorkR2")
A<-read.csv( "한국교통안전공단_대중교통 이용인원 현황(2018)",header=T)
A
View(A)
setwd("D:/WorkR2/proje")
A<-read.csv( "한국교통안전공단_대중교통 이용인원 현황(2018)",header=T)
A
View(A)
setwd("D:/WorkR2/proje")
A<-read.csv( "한국교통안전공단_대중교통 이용인원 현황(2018)",header=T)
A
A<-read.csv( "한국교통안전공단_대중교통 이용인원 현황 (2018년).csv",header=T)
A
tr2 <- read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr2)
tr2 <- read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex = 1,
encoding="UTF-8")
tr2 <- read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex = 1,
encoding="UTF-8")
tr2 <- read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr2)
setwd("D:/WorkR2/proje")
A<-read.csv( "한국교통안전공단_대중교통 이용인원 현황 (2018년).cs",header=T)
A
View(A)
setwd("D:/WorkR2/proje")
B<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 1,Encoding="UTF-8")
B
tr2 <- read.xlsx(file="seoul tr.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr2)
setwd("D:/WorkR2/proje")
C<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 2,Encoding="UTF-8")
C
setwd("D:/WorkR2/proje")
B<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 1,Encoding="UTF-8")
B
View(B)
setwd("D:/WorkR2/proje")
B<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 1,Encoding="UTF-8")
B
View(B)
setwd("D:/WorkR2/proje")
A<-read.csv( "한국교통안전공단_대중교통 이용인원 현황 (2018년).cs",header=T)
A
View(A)
setwd("D:/WorkR2/proje")
C<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 1,Encoding="UTF-8")
C
setwd("D:/WorkR2/proje")
C<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 1,Encoding="UTF-8")
C
View(C)
setwd("D:/WorkR2/proje")
B<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 1,Encoding="UTF-8")
B
View(B)
setwd("D:/WorkR2/proje")
B<-read.xlsx(file="11.교통 관광 정보통신_최종.xlsx",sheetIndex= 1,Encoding="UTF-8")
B
View(B)
setwd("D:/WorkR2/proje")
B<-read.csv(file="11.교통 관광 정보통신_최종.csv",sheetIndex= 1,Encoding="UTF-8")
B
View(B)
setwd("D:'WorkR2/proje")
D<-read.xlsx(file = "자동차 운전면허 소지자.xlsx",sheetIndex= 1,Encoding="UTF-8")
D
View(D)
tr2<-read.xlsx("seoul tr.xlsx")
tr2
tr2 <- read.xlsx(file="seoul tr.xlsx",sheetIndex = 1,
encoding="UTF-8")
View(tr2)
#자동차 운전면허 소지자
setwd("D:'WorkR2/proje")
D<-read.xlsx(file = "자동차 운전면허 소지자.xlsx",sheetIndex= 1,Encoding="UTF-8")
D
View(D)
setwd("D:/WorkR2/proje")
E<-read.xlsx("주차장 현황.xlsx",sheetIndex= 1,Encoding="UTF-8")
E
View(E)
setwd("D:/WorkR2/proje")
E<-read.xlsx(file="주차장 현황.xlsx",sheetIndex= 1,Encoding="UTF-8")
E
View(E)
